// Generated by CoffeeScript 1.12.7
var WorkshopCustomMaskSplitter,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

WorkshopCustomMaskSplitter = (function(superClass) {
  extend(WorkshopCustomMaskSplitter, superClass);

  function WorkshopCustomMaskSplitter() {
    return WorkshopCustomMaskSplitter.__super__.constructor.apply(this, arguments);
  }

  WorkshopCustomMaskSplitter.prototype.isSimpleSplit = function() {
    return true;
  };

  return WorkshopCustomMaskSplitter;

})(CustomMaskSplitter);
